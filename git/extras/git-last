#!/usr/bin/env bash

if [[ $PLATFORM == 'MacOS' ]]; then
  lastWeekAfter="$(date -v-mon -v-sun -v-mon +%Y-%m-%d) 00:00"
  lastMonthAfter="$(date -v-1m +%Y-%m)-01 00:00"
  lastYearAfter"$(date -v-1y +%Y)-01-01 00:00"
  lastWeekBefore="$(date -v-mon -v-sun +%Y-%m-%d) 23:59"
  lastMonthBefore="$(date -j -f "%Y-%m-%d" -v+1m -v-1d "$lastMonthAfter" +%Y-%m-%d) 23:59"
  lastYearBefore="$(date -v-1y +%Y +%Y)-12-31 23:59"
else
  lastWeekAfter="$(date -d "last Monday -1 week" +%Y-%m-%d) 00:00"
  lastMonthAfter="$(date -d "last month" +%Y-%m)-01 00:00"
  lastYearAfter="$(date -d "last Year" +%Y)-01-01 00:00"
  lastWeekBefore="$(date -d "last Sunday" +%Y-%m-%d) 23:59"
  lastMonthBefore="$(date -d "this month" +%Y-%m)-01 23:59"
  lastYearBefore="$(date -d "last Year" +%Y)-12-31 23:59"
fi

logFormat="%C(dim)%cd (%h)%Creset%n  %s%n"
dateFormat="format:%d-%m-%Y"
author="$(git config user.email)"


invalidArgs() {
  echo "Invalid period provided"
}

noArgs() {
  echo "No period provided"
}

main() {
  case "$@" in
    week)
      git log \
        --format="$logFormat" \
        --date="$dateFormat" \
        --no-merges \
        --branches="*" \
        --after="$lastWeekAfter" \
        --before="$lastWeekBefore" \
        --author "$author"
      ;;
    month)
      git log \
        --format="$logFormat" \
        --date="$dateFormat" \
        --no-merges \
        --branches="*" \
        --after="$lastMonthAfter" \
        --before="$lastMonthBefore" \
        --author "$author"
      ;;
    year)
      git log \
        --format="$logFormat" \
        --date="$dateFormat" \
        --no-merges \
        --branches="*" \
        --after="$lastYearAfter" \
        --before="$lastYearBefore" \
        --author "$author"
      ;;
    *)
      invalidArgs
      exit 1
      ;;
  esac
}


if [ -z "$1" ]; then
  noArgs
  exit 1
fi

function is_git_repo() {
  git rev-parse --show-toplevel > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not a git repo!'
    exit $result
  fi
}

is_git_repo && main $@
