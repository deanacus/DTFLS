set nocompatible
set backspace=indent,eol,start
filetype plugin indent on
set backspace=2

"Set up plug.vim
call plug#begin('~/dotfiles/vim/plugged')

"NERDTree
Plug 'scrooloose/nerdtree'
Plug 'sheerun/vim-polyglot'
Plug 'trevordmiller/nova-vim'
Plug 'w0rp/ale'
call plug#end()

autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif

"Linters
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'scss': ['sass-lint'],
\}
let g:ale_sign_warning = '⚠'
highlight ALEWarningSign guifg=#F2C38F
highlight ALEwarning guifg=#f2c38f
let g:ale_sign_error = '✖'
hi ALEErrorSign guifg=#DF8C8C
let g:ale_fix_on_save = 1
let g:ale_linters_explicit = 1
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['eslint'],
\}

"UI
set ruler
set colorcolumn=80
highlight ColorColumn ctermbg=0 guibg=lightgrey
set showcmd
set number
syntax on
set splitbelow
set splitright

"Search stuff
set smartcase
set incsearch
set ignorecase
set autoread
set hlsearch
set showmatch
nnoremap <esc><esc> :noh <Enter>

"Stop 'backups'
set nobackup
set noswapfile
set nowb

"Indentation stuff
set autoindent
set smartindent
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab

"Code Folding
set foldmethod=indent
set foldlevel=99 "Stop everything being folded when opened

"NERDTree Stuff
nnoremap <Leader>f :NERDTreeToggle<Enter>
let g:NERDTreeHijackNetrw = 1
let g:NERDTreeWinPos = "left"
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'
let g:NERDTreeIgnore=['node_modules$[[dir]]']
"let g:NERDTreeMapOpenVSplit = '<CR>'
"let g:NERDTreeQuitOnOpen = 'false'

"Scrolling
set scrolloff=10
set sidescrolloff=15
set sidescroll=1

" Syntax specific settings
augroup filetypes
  autocmd!
  " JavaScript
  autocmd BufRead,BufNewFile,BufWrite *.{js.asp,es6,jsx} set filetype=javascript
  " Writing
  autocmd BufRead,BufNewFile,BufWrite *.md set syntax=markdown
  autocmd Filetype md set wrap linebreak nolist spell textwidth=80
  autocmd Filetype txt set wrap linebreak nolist spell textwidth=80
augroup end

" Status line
set laststatus=2 " 0, 1 or 2; when to use a status line for the last window
set statusline= " alternate format to be used for a status line
set statusline+=\ %f\ %m\ %r " show filename/path
set statusline+=%= " set right-side status info after this line
set statusline+=%l/%L:%v " set <line number>/<total lines>:<column>
set statusline+=\  " set ending space
